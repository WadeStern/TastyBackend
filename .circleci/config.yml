version: 2.1
orbs:
  python: circleci/python@2
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  test-python:
    # Install dependencies and run tests
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - python/install-packages
      - python/install-packages:
          args: pytest
          pkg-manager: pip
          pypi-cache: false
      - run:
          name: Run tests
          command: pytest --junitxml=junit.xml
      - store_test_results:
          path: junit.xml
      - run:
          name: Lint Python code
          command: |
            pip install flake8
            flake8 .
          when: always  # Run even if previous steps fail

  build_docker_image:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build Docker image
          command: |
            export TAG=0.2.<< pipeline.number >>
            export IMAGE_NAME=tastybackend           
            docker build -t $DOCKER_LOGIN/$IMAGE_NAME -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/$IMAGE_NAME
  
  create_kubernetes_cluster:
    docker:
      - image: mcr.microsoft.com/azure-cli
    steps:
      - checkout
      - run:
          name: Login to Azure
          command: |
            az login --service-principal --username "${AZURE_CLIENT_ID}" --password "${AZURE_CLIENT_SECRET}" --tenant "${AZURE_TENANT_ID}"  
      - run:
          name: Create Kubernetes Cluster
          command: |
            az aks create -g buypotatoResourceGroup -n buypotatoStaging --node-count 1 --generate-ssh-keys
      - persist_to_workspace:
          root: .
          paths: .kube

  apply_kubernetes_manifest:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
      - run:
          name: Apply Kubernetes Manifest
          command: |
            curl -LO "https://raw.githubusercontent.com/WadeStern/TastyBackend/d6bc17d77bf489d7b45bf83d0f1e0f609713bc44/deploy/staging-backend-deploy.yaml"
            kubectl apply -f staging-backend-deploy.yaml
      - run:
          name: Verify Deployment
          command: |
            kubectl get pods
            kubectl get services
workflows:
  build-and-test:
    jobs:
      - test-python
      - build_docker_image:
          requires:
            - test-python
      - create_kubernetes_cluster:
          requires:
            - build_docker_image
      - apply_kubernetes_manifest:
          requires:
            - create_kubernetes_cluster
